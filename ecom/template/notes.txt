Notes : 

Create a Folder for project

1. Install Environment [ pip Install venv ] 
2. Create venv [ venv venv_name]
3. Activate venv [ env_name\scripts\activate ]
4. install django [ pip install django ]
5. Create a project [ django-admin startproject project_name ]
6. Run Project : Change Current Directory [cd project_name] [python manage.py runserver]
7. Create App : python manage.py startapp app_name
8. Create a New View in Views.py
9. Then add a url in the urls.py
10. create a templte and static Folder
11. Change Django Default Port
12. Default django Port : 8000
python manage.py runserver 8000
python manage.py runserver 8001
python3 -m venv django_venv		//create virtual Environment 
source ./django_venv/bin/active 	//activate virtual Environment
pip3 install django			//install django
django-admin startproject firstDjangoProject //create project
$cd firstDjangoProject			//to start server
python3 manage.py runserver
3. Again Run Project
	venv_name\scripts\activate
    cd project_name
    python manage.py runserver
    
 4. Create New App Inside The Project    

 	python manage.py startapp app_name
	python manage.py startapp myapp

	127.0.0.1.8000
	127.0.0.1 [Localhost]	.8000 [Port]	

	3306	SQL
	5000	Html\CSS
	3000	React
	404	Page Not Found


5. views.py File

 1. Function Based View

	Before Creating Function :
	Import : from django.http import HttpResponce
    then:
	create function using Request and HttpResponce

    	Ex : def show(request)
		   return HttpResponce("<h1>Hello Ashitosh</h1>")

	Open : urls.py
		  After Creating Function 		   

import : from django.urls import path
 from myapp import views
		   [import views file from the newly cereated app name 'myapp']
		   Add Path : path('path_name/',file_name.function_name)
		   path('show/',views.show),

		   Save File And Open Link
		   Add the path
		i.e : http://127.0.0.1:8000/show/


=========================================================================================================================================================================


	* For Multiple Parameter In Function
	viwes.py
		def details(request,name):
    		return HttpResponse(name)

			urls.py
		path('details/<name>',views.details),	
				http://127.0.0.1:8000/details/Ashitosh
								or


		views.py
		def details(request,name,rollno):
    			return HttpResponse("Name : "+name + "RollNO : "+rollno)

				urls.py
    		path('details/<name>/<rollno>/',views.details),
					http://127.0.0.1:8000/details/Ashitosh/111/
					
=========================================================================================================================================================================


  2.class based view


========================================================================================================================================================================
6. Adding HTML and CSS Folders 

	MVT Architecture
	user -> url -> view -> model -> template
1) HTML
	- create folder with name 'template' in the main project
	- in template folder create html files.

	open urls.py 
	- import : from myapp import views
		- add path : path('pathname/',viwes.html_file_name)
				   : path('home/',views.home)

	open views.py

	# add html file in function		
	from django.shortcuts import render
	from django.http import HttpResponse			   
		def home(request):
    		return render(request,'home.html')
2) CSS
	- create folder with name 'static' in the main project
	- in static folder create css,js,images folder
	- in css folder create css file
		connect css file with html file
		<!DOCTYPE html>
			{%load static%}
	<html lang="en">
		<link rel="stylesheet" href="{%static 'css/style.css'%}">
=========================================================================================================================================================================
# make changes in settings.py file
	add created app in INSTALLED_APPS = ['app_name',]
		Above template import os

	in template add template folder path 
	 ['DIRS': [os.path.join(BASE_DIR,'template')],]

	 	in STATIC_URLS add path : 
	[STATICFILES_DIRS = [os.path.join(BASE_DIR,'static')]]
=========================================================================================================================================================================
# Dictionary